class Solution {
public:
    bool search(vector<int>& nums, int target) {
        if (nums.size() == 1) return nums[0] == target ? true : false;
        int left = 0, right = nums.size() - 1;
        while(left < right && left < nums.size() - 1 && right > 0){
            //cout << left << " " << right << endl;
            if (nums[left] == target) return true;
            if (nums[right] == target) return true;
            while(left < right && nums[left] == nums[left+1] && left < nums.size()-1)left++;
            while(left < right && nums[right] == nums[right-1] && right > 0)right--;
            int mid = (left+right)/2;
            if (nums[mid] == target) return true;
            if (nums[mid] > target){
                if (nums[left] < target) right = mid;
                else if (nums[left] > target){
                    if (nums[mid] < nums[left]) right = mid;
                    else left = mid + 1;
                }
                
            } else if (nums[mid] < target) {
                if (nums[right] > target) left = mid + 1;
                else if (nums[right] < target){
                    if (nums[mid] < nums[right]) right = mid;
                    else left = mid + 1;
                }
            }
            //cout << left << " " << right << endl;
        }
        if (left > right || left > nums.size() - 1 || right < 0) return false;
        if (nums[left] == target || nums[right] == target) return true;
        return false;
    }
};