class Solution {
public:
    int findPeakElement(vector<int>& nums) {
        if (nums.size() == 1) return 0;
        if (nums[0] > nums[1]) return 0;
        if (nums[nums.size() - 1] > nums[nums.size() - 2]) return nums.size() - 1;
        int mid;
        int left = 0, right = nums.size() - 1;
        
        while(left < right){
            
            mid = (left+right)/2;
            //cout << left << " " << mid << " " << right << endl;
            if (left == right - 1) {
                if (nums[left] > nums[right]) return left;
                else return right;
            }
            if (nums[mid] > nums[mid-1] && nums[mid] > nums[mid+1]) return mid;
            else if (((mid - 1 < 0) || (nums[mid] >= nums[mid-1])) && ((mid+1 > nums.size() - 1) || (nums[mid] <= nums[mid+1]))) left = mid;
            else if (((mid - 1 < 0) || (nums[mid] <= nums[mid-1])) && ((mid+1 > nums.size() - 1) || (nums[mid] >= nums[mid+1]))) right = mid;
            else if (((mid - 1 < 0) || (nums[mid] <= nums[mid-1])) && ((mid+1 > nums.size() - 1) || (nums[mid] <= nums[mid+1]))) right = mid;
            
            
        }
        return 0;
    }
};