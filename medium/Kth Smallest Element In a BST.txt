/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans, kCur, counterStartedFlag;
    
    void dfs(TreeNode* root, int k){
        
        if (root->left) dfs(root->left, k);
        kCur+=1;
        if (kCur == k && ans == -1){
            ans=root->val;
            kCur++;
        }
        else if (root->right) dfs(root->right, k);
        
    }
    
    
    int kthSmallest(TreeNode* root, int k) {
        counterStartedFlag = 0;
        kCur = 0;
        ans = -1;
        dfs(root, k);
        return ans;
    }
};