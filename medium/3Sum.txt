class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        sort(nums.begin(), nums.end());
        if (nums.size() == 0) return ans;
        if(nums[0] > 0 || *(nums.end() - 1) < 0) return ans;
        for(int i = 0 ; i+2 < nums.size() ; i++){
            //cout << i << " " << nums.size()-2 << endl;
            int left = i+1, right = nums.size() - 1;
            while(left < right && (i==0 || nums[i] != nums[i-1])){
                if(nums[i]+nums[left]+nums[right] == 0){
                    ans.push_back({nums[i],nums[left],nums[right]});
                    while(left < nums.size()-1 && nums[left] == nums[left+1]) left++;
                    while(right >= 1 && nums[right] == nums[right-1]) right--;
                    left++;
                    right--;
                }
                else if(nums[i]+nums[left]+nums[right] < 0) left++;
                else right--;
                
            }
            

        }
        return ans;
    }
};