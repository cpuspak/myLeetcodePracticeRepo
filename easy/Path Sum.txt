/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    bool dfs(TreeNode* root, int targetSum, int curAccSum){
        if (root == NULL) return false;
        if (root->left == NULL && root->right == NULL){
            if (curAccSum+root->val == targetSum) return true;
            else return false;
        }
        else {
            return dfs(root->left, targetSum, (curAccSum + root->val)) || 
                dfs(root->right, targetSum, (curAccSum + root->val));
        }
    }
    
    bool hasPathSum(TreeNode* root, int targetSum) {
        int curAccSum = 0;
        if (root == NULL) return false;
        return dfs(root, targetSum, curAccSum);
    }
};