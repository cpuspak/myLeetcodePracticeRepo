/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxPathSumVar = -1*99999999;
    int dfs(TreeNode* root) {
        int leftPathSum, rightPathSum;
        if (!root) return 0;
        if (root) leftPathSum = dfs(root->left);
        if (root) rightPathSum = dfs(root->right);
        int maxVal = max(root->val, max(leftPathSum+root->val, max(rightPathSum+root->val, leftPathSum+rightPathSum+root->val)));
        if (maxPathSumVar < maxVal) maxPathSumVar = maxVal;
        
        return max(root->val+leftPathSum, max(root->val+rightPathSum, root->val));
        
    }
    
    int maxPathSum(TreeNode* root) {
        dfs(root);
        return maxPathSumVar;
    }
};